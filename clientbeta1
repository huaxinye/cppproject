#include<iostream>
#include<string.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<stdlib.h>
#include<unistd.h>
#include<netdb.h>
#define port 1500
#define bufsize 1024
using namespace std;

int main()
{
    int client;
    int server;
    int portNum = 1500;
    bool isExit = false;
    char buffer[bufsize];
    char *ip= "10.0.0.8";

    struct sockaddr_in server_addr;

    client = socket(AF_INET, SOCK_STREAM, 0);
    if (client<0)
    {
        cout << "create socket failed." <<"\n";
        exit(1);
    }
    cout << "socket created" <<"\n";
    
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(portNum);
    
    if (connect(client, (struct sockaddr*)&sever_addr, sizeof(server_addr)) == 0)
    {
       cout << "Connecting to server" << endl;
    }
    
    recv(client, bufsize, bufsize, 0);
    cout << "Connection comfirmed" << endl;
    cout << "Enter # to end the connection" << endl;
    
    do{
       cout << "Client: ";
       do{
          cin >> buffer;
          send(client, buffer, bufsize, 0);
          if(*buffer == '#')
          {
             send(client, buffer, bufsize, 0);
             *buffer = '*';
             isExit = true;
          }
        }while (*buffer != 42);
        
        cout << "Server: ";
        
        do{
           recv(client, buffer, bufsize, 0);
           cout << buffer <<" ";
           if (*buffer == '#')
           {
              *buffer = '*';
              isExit = true;
            }
        }while (*buffer != 42);
        
        cout << endl;
    }while(!isExit);
    
    cout << "Connection terminated" << endl;
    cout << "Goodbye" << endl;
    
    close(client);
    
    return 0;
}
        
